# https://stackoverflow.com/a/59846239

user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Security headers

  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;

  # Logging

  log_format main '$remote_addr - $remote_user [$time_local] [$request_time] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;

  # Basic settings

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_tokens off;
  client_max_body_size 1M;

  # Check Bots

  map $http_user_agent $is_bot_agent {
    default 0;
    "~*(googlebot|Google-InspectionTool|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator|mj12bot|ahrefsbot|semrushbot|dotbot|applebot|duckduckbot|sogou|exabot|petalbot|ia_archiver|alexabot|msnbot|archive.org_bot|screaming frog|proximic|yahoo! slurp)" 1;
  }

  map $request_uri $is_bot_query {
    default 0;
    "~*[\?&]isbot(?:=|&|$)" 1;
  }

  map "$is_bot_agent$is_bot_query" $should_proxy {
    default 0;
    ~*1 1;
  }

  # Server

  server {
    listen 8080;
    server_name _;
    http2  on;

    root /app/public;
    index index.html;

    # Static Files

    error_page 404 /_not-found.html;
    location = /_not-found.html {
      internal;
      return 200 "404 Not Found";
    }

    location /404 {
      if ($should_proxy) {
        proxy_pass http://ssr-proxy:8081;
        break;
      }

      return 404;
    }

    location /301 {
      if ($should_proxy) {
        proxy_pass http://ssr-proxy:8081;
        break;
      }

      return 301 $scheme://$http_host/;
    }

    location / {
      if ($should_proxy) {
        proxy_pass http://ssr-proxy:8081;
        break;
      }

      try_files $uri /index.html;
    }
  }
}